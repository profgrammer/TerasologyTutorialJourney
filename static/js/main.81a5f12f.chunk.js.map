{"version":3,"sources":["components/Content.js","components/SidebarItem.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["data","name","attributes","keyA","keyB","keyC","children","Content","state","dimensions","this","wrapper","getBoundingClientRect","setState","translate","x","width","y","height","className","style","margin","props","destiny","title","ref","tc","orientation","Component","SidebarItem","sidebarItemStyle","padding","border","borderRadius","onClick","setCurrentDestiny","bind","step","Sidebar","Fragment","destinyLinks","map","key","App","destinies","current","data_url","getCurrentDestiny","filter","t","tutorials","borderRight","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81a5f12f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Tree} from 'react-d3-tree';\r\n// import {data} from '../data/path1';\r\n// import '../timeline';\r\n\r\nconst data = [\r\n    {\r\n      name: 'Top Level',\r\n      attributes: {\r\n        keyA: 'val A',\r\n        keyB: 'val B',\r\n        keyC: 'val C',\r\n      },\r\n      children: [\r\n        {\r\n          name: 'Level 2: A',\r\n          attributes: {\r\n            keyA: 'val A',\r\n            keyB: 'val B',\r\n            keyC: 'val C',\r\n          },\r\n        },\r\n        {\r\n          name: 'Level 2: B',\r\n        },\r\n      ],\r\n    },\r\n  ];\r\nexport class Content extends Component {\r\n\r\n    state = {};\r\n\r\n    componentDidMount() {\r\n        const dimensions = this.wrapper.getBoundingClientRect();\r\n        this.setState({\r\n        translate: {\r\n            x: dimensions.width / 2 ,\r\n            y: dimensions.height / 2 - 300\r\n        }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row justify-content-center\" style={{margin: '20px auto'}}>\r\n                    <h3>{this.props.destiny.title} - Tutorial Journey</h3>\r\n                </div>\r\n                <div className=\"wrapper\" style={{height: '100vh', width: '100%'}} ref={tc => this.wrapper = tc}>\r\n                    <Tree data={data} translate={this.state.translate} orientation='vertical'></Tree>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// const contentStyle = {\r\n//     padding: '10px',\r\n//     position: 'fixed',\r\n//     top: '0',\r\n//     left: '300px'\r\n// }\r\n\r\nexport default Content\r\n","import React, { Component } from 'react'\r\nimport '../App.css';\r\n\r\nexport class SidebarItem extends Component {\r\n\r\n    sidebarItemStyle = () => {\r\n        return {\r\n            padding: '20px',\r\n            border: '1px solid darkgray',\r\n            borderRadius: '5px',\r\n            margin: '10px 10px'\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.props.setCurrentDestiny.bind(this, this.props.destiny.step)} className=\"sidebaritem row\" style={this.sidebarItemStyle()}>\r\n                {this.props.destiny.step}. {this.props.destiny.title}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SidebarItem\r\n","import React, { Component } from 'react';\r\nimport SidebarItem from './SidebarItem';\r\n\r\nexport class Sidebar extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row justify-content-center\" style={{margin: '10px auto'}}>\r\n                    <h3>I am a ... </h3>\r\n                </div>\r\n                {this.props.destinyLinks.map(destiny => (\r\n                    <SidebarItem setCurrentDestiny={this.props.setCurrentDestiny} key={destiny.step} destiny={destiny} />\r\n                ))}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n// const sidebarStyle = {\r\n//     height: '100%',\r\n//     width: '300px',\r\n//     position: 'fixed',\r\n//     top: '0',\r\n//     left: '0',\r\n//     padding: '10px',\r\n//     borderRight: '1px solid black'\r\n// }\r\n\r\nexport default Sidebar\r\n","import React from 'react';\nimport './App.css';\nimport Content from './components/Content';\nimport Sidebar from './components/Sidebar';\n\nclass App extends React.Component {\n\n  state = {\n    destinies: [\n      {\n        step: 1,\n        title: 'Player',\n        current: true,\n        data_url: \"/src/data/path1.json\"\n      },\n      {\n        step: 2,\n        title: 'Modder',\n        current: false,\n        data_url: \"/src/data/path1.json\"\n      },\n      {\n        step: 3,\n        title: 'Developer',\n        current: false,\n        data_url: \"/src/data/path1.json\"\n      },\n      {\n        step: 4,\n        title: 'Artist',\n        current: false,\n        data_url: \"/src/data/path1.json\"\n      }\n    ]\n  }\n\n  getCurrentDestiny = () => {\n    return this.state.destinies.filter(t => t.current)[0];\n  }\n\n  setCurrentDestiny = (step) => {\n    this.setState({\n      tutorials: this.state.destinies.map(t => {\n        t.current = (t.step === step);\n        return t;\n      })\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <span className=\"navbar-brand mb-0 h1\">Terasology - Tutorial Site</span>\n        </nav>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-3\" style={{borderRight: '1px solid lightgray'}}>\n              <Sidebar setCurrentDestiny={this.setCurrentDestiny} destinyLinks={this.state.destinies}></Sidebar>\n            </div>\n            <div className=\"col-9\">\n              <Content destiny={this.getCurrentDestiny()}></Content>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n// const sidebarStyle = {\n//   height: '100%',\n//   width: '300px',\n//   position: 'fixed',\n//   top: '0',\n//   left: '0',\n//   padding: '10px',\n//   borderRight: '1px solid darkgray'\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}